{"version":3,"file":"main.67f51b894bd99e8212a0.hot-update.js","sources":["webpack:///./src/server.js"],"sourcesContent":["import express from 'express';\nimport { matchRoutes } from 'react-router-config';\nimport renderer from './utils/renderer';\nimport configureStore from './utils/configureStore';\nimport routes from './routes';\nimport '../src/components/App/App.scss';\n\nconst server = express()\nconsole.log('DEV MODE 👩‍💻');\nserver.disable('x-powered-by')\nserver.use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n\nserver.get('/*', (req, res) => {\n  const store = configureStore()\n\n  // Map over our routes, select our matching route and then call its loadData function, if it has one\n  const promises = matchRoutes(routes, req.path).map(({ route }) => {\n    return route.component.loadData\n      ? route.component.loadData(store, req)\n      : Promise.resolve(null)\n  })\n\n  // When our loadData fn resolves, set up the renderer helper and return our populated template\n  Promise.all(promises)\n    .then(() => {\n      const context = {}\n      const content = renderer(req, store, context)\n\n      if (context.url) {\n        return res.redirect(context.url)\n      }\n\n      res.status(context.statusCode || 200).send(content)\n    })\n    .catch(error => {\n      console.log(error)\n      res.status(500).json({ error: error.message, stack: error.stack })\n    })\n})\n\nexport default server\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;;;;A","sourceRoot":""}